{# Imports components #}
{% import 'components/img/img.njk' as Img %}
{% import 'components/shapedimg/shapedimg.njk' as ShapedImg %}

{% macro content(obj) %}

  {% set componentClassName = 'c-card1' %}

  {% set configDefault = {
    "className": [],
    "innerWrapperClassName": [],
    "innerClassName": [],
    "contentClassName": [],
    "variations": []
  }%}

  {% set obj = configDefault | overwriteMerge(obj or {}) %}

  {# Creates new arrays for manipulation) #}
  {% set _className = [componentClassName] | mergeArray(obj.className or configDefault.className) %}
  {% set _innerClassName = [componentClassName + "__inner"] | mergeArray(obj.innerClassName or configDefault.innerClassName) %}
  {% set _contentClassName = [componentClassName + "__content"] | mergeArray(obj.contentClassName or configDefault.contentClassName) %}

  {# Pushes every variation into class attribute (prepending the base class) #}
  {% for variation in ([] | mergeArray(obj.variations or configDefault.variations)) %}
    {% set _className = (_className.push(componentClassName + "--" + variation), _className) %}
  {% endfor %}

  <div class="{{_className | join(" ")}}">
    <div class="{{_innerClassName | join(" ")}}">

      {% if obj.img.isShaped %}
        {{
          ShapedImg.content(obj.img| merge({
            className:[componentClassName + "__cover"]
          }))
        }}
      {% else %}
        {{
          Img.content(obj.img)
        }}
      {% endif %}

      {% if obj.content %}
        <div class="{{_contentClassName | join(" ")}}">

            {{obj.content|safe}}

      </div>
        <!-- .{{componentClassName}}__cover -->
      {% endif %}

    </div>
    <!-- .{{componentClassName}}__inner -->
  </div>
  <!-- .{{componentClassName}} -->
{% endmacro %}
